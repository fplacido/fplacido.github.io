import { normalizeUrl } from "../lib/normalize-url";
import { getPageData } from "../lib/page-data";
/**
 * Base Signal Factory
 */
const createBaseSignal = (type, data) => {
    return {
        index: undefined, // This will get overridden by a middleware that runs once analytics is instantiated
        timestamp: new Date().toISOString(),
        anonymousId: "", // to be set by a middleware (that runs once analytics is instantiated)
        type,
        context: {
            library: {
                name: "@segment/analytics-next",
                version: "0.0.0",
            },
            signalsRuntime: "",
        },
        data: {
            ...data,
            page: getPageData(),
        },
    };
};
export const createInstrumentationSignal = (rawEvent) => {
    return createBaseSignal("instrumentation", {
        rawEvent,
        type: rawEvent.type,
    });
};
export const createInteractionSignal = (data) => {
    return createBaseSignal("interaction", data);
};
export const createNavigationSignal = (data) => {
    return createBaseSignal("navigation", data);
};
export const createUserDefinedSignal = (data) => {
    return createBaseSignal("userDefined", data);
};
export const createNetworkSignal = (data) => {
    return {
        ...createBaseSignal("network", {
            ...data,
            url: normalizeUrl(data.url),
        }),
    };
};
//# sourceMappingURL=factories.js.map