"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNetworkSignal = exports.createUserDefinedSignal = exports.createNavigationSignal = exports.createInteractionSignal = exports.createInstrumentationSignal = void 0;
const normalize_url_1 = require("../lib/normalize-url");
const page_data_1 = require("../lib/page-data");
/**
 * Base Signal Factory
 */
const createBaseSignal = (type, data) => {
    return {
        index: undefined, // This will get overridden by a middleware that runs once analytics is instantiated
        timestamp: new Date().toISOString(),
        anonymousId: "", // to be set by a middleware (that runs once analytics is instantiated)
        type,
        context: {
            library: {
                name: "@segment/analytics-next",
                version: "0.0.0",
            },
            signalsRuntime: "",
        },
        data: {
            ...data,
            page: (0, page_data_1.getPageData)(),
        },
    };
};
const createInstrumentationSignal = (rawEvent) => {
    return createBaseSignal("instrumentation", {
        rawEvent,
        type: rawEvent.type,
    });
};
exports.createInstrumentationSignal = createInstrumentationSignal;
const createInteractionSignal = (data) => {
    return createBaseSignal("interaction", data);
};
exports.createInteractionSignal = createInteractionSignal;
const createNavigationSignal = (data) => {
    return createBaseSignal("navigation", data);
};
exports.createNavigationSignal = createNavigationSignal;
const createUserDefinedSignal = (data) => {
    return createBaseSignal("userDefined", data);
};
exports.createUserDefinedSignal = createUserDefinedSignal;
const createNetworkSignal = (data) => {
    return {
        ...createBaseSignal("network", {
            ...data,
            url: (0, normalize_url_1.normalizeUrl)(data.url),
        }),
    };
};
exports.createNetworkSignal = createNetworkSignal;
//# sourceMappingURL=factories.js.map