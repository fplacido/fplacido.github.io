import { SignalsRuntime } from '../shared/signals-runtime';
import { Signal } from './mobile-signals-types';

export class MobileSignalsRuntime extends SignalsRuntime<Signal> {
  private _signalCounter: number;
  constructor(signals: Signal[] = []) {
    super(signals);
    this._signalCounter = 0;
  }
  _add = (signal: Signal) => {
    if (this._signalCounter < 0) {
      this._signalCounter = 0;
    }

    if ('index' in signal && signal.index == -1) {
      // this was previously broken for ages, not sure when this code path would ever be used.
      // My understanding is that currently, getNextIndex() is called _outside_ of this function and used to construct the added signal. - seth
      signal.index = this._getNextIndex();
    }
    this.signalBuffer.unshift(signal);
    if (this.signalBuffer.length > this._maxBufferSize) {
      this.signalBuffer.pop();
    }
  };

  _getNextIndex = () => {
    const index = this._signalCounter;
    this._signalCounter += 1;
    return index;
  };
}
